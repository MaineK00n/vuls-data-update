name: Archive

on:
  workflow_call:
    inputs:
      type:
        description: "expected: [raw, extracted]"
        required: true
        type: string
      target:
        description: "target name"
        required: true
        type: string

jobs:
  archive:
    name: archive vuls-data-${{ inputs.type }}-${{ inputs.target }}
    runs-on: ubuntu-latest
    steps:
      - name: Check GitHub Repository Size
        run: |
          SIZE=$(curl -s https://api.github.com/repos/vulsio/vuls-data-${{ inputs.type }}-${{ inputs.target }} | jq '.size')
          echo "repository size [KB]:" ${SIZE}
          if [ ${SIZE} -gt 9500000 ]; then
            echo "### Repository size is *over 9.5 GB*. Archive it!"

            ARCHIVE_MAX=$( curl -s https://api.github.com/repos/vulsio/vuls-data-${{ inputs.type }}-${{ inputs.target }}/forks | jq -r '.[. | length] |= {"name": "vuls-data-${{ inputs.type }}-${{ inputs.target }}-archive-0"} | sort_by(.name) | reverse | .[0].name ' | sed -e 's/vuls-data-.*-archive-//')
            ARCHIVE_NEW=$(( $ARCHIVE_MAX + 1 ))

            (
              echo "### Repository size is *over 9.5 GB*. Archive it!"
              echo ""
              echo "### 1. Fork & archive the repository:"
              echo ""
              echo "\`\`\`"
              echo "gh repo fork vulsio/vuls-data-${{ inputs.type }}-${{ inputs.target }} --clone=false --org=vulsio --fork-name=vuls-data-${{ inputs.type }}-${{ inputs.target }}-archive-${ARCHIVE_NEW}"
              echo "gh repo archive vulsio/vuls-data-${{ inputs.type }}-${{ inputs.target }}-archive-${ARCHIVE_NEW} --yes"
              echo "\`\`\`"
              echo "" 
              echo "### 2. Delete all commits and add one with the latest contents:"
              echo ""
              echo "\`\`\`"
              echo "git clone git@github.com:vulsio/vuls-data-${{ inputs.type }}-${{ inputs.target }}.git"
              echo "cd vuls-data-${{ inputs.type }}-${{ inputs.target }}"
              echo "git checkout --orphan latest-only"
              echo "git add -A"
              echo "git commit -m 'just archived' > /dev/null"
              echo "git branch -D main"
              echo "git branch -m main"
              echo "git push --force origin main"
              echo "\`\`\`"
              echo ""
            ) >> $GITHUB_STEP_SUMMARY

            exit 1
          fi
